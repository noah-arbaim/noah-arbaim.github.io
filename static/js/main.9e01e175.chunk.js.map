{"version":3,"sources":["strings/kor.js","pages/MainPage.js","assets/defaultMan.png","molecules/UserCard.js","molecules/UserTable.js","repositories/AdminRepository.js","organisms/UserListView.js","molecules/ReviewCard.js","molecules/ItemDeleteButton.js","molecules/ReviewTable.js","molecules/ReviewDownloadButton.js","organisms/ReviewListView.js","molecules/ProductCard.js","molecules/ProductTable.js","organisms/ProductListView.js","molecules/OrderCard.js","molecules/OrderTable.js","molecules/OrderDownloadButton.js","organisms/OrderListView.js","molecules/RevenueCard.js","molecules/RevenueTable.js","molecules/RevenueDownloadButton.js","organisms/RevenueListView.js","organisms/ReviewerRevenueListView.js","pages/TestPage.js","App.js","reportWebVitals.js","index.js"],"names":["MainPage","UserCard","props","userData","console","log","style","display","width","verticalAlign","textAlign","profilePicUrl","height","src","defaultMan","name","isSeller","gender","ManOutlined","WomanOutlined","email","phone","gutter","span","title","value","followerCount","followingCount","ratingScore","ratingCount","revenueAmount","profitAmount","videoCount","bordered","Item","label","userId","class","statusCode","balance","viewCount","reportCount","createdAt","updatedAt","vtype","introduction","sellerCertificationNo","sellerCertificationUrl","sellerBankName","sellerBankAccount","sellerBankAccountHolder","sellerPhone","sellerBusinessName","sellerContactForCustomer","sellerOwnerName","sellerCorperateRegistrationNumber","sellerManagerName","sellerManagerContact","sellerManagerEmail","sellerOfficeAddress","sellerShipmentAddress","sellerExchangeReturnAddress","columns","dataIndex","sorter","compare","a","b","multiple","productCount","render","record","onChange","pagination","filters","extra","UserTable","userInfoList","dataSource","rowKey","id","expandable","expandedRowRender","rowExpandable","API_ROOT_URL","API","path","data","payloadString","Object","entries","map","e","join","axios","get","post","put","delete","AdminRepository","params","UserListView","useState","userListData","setUserListData","Search","Input","onSearch","getUserList","result","updateUserList","useEffect","placeholder","allowClear","ReviewCard","React","modalVisible","setModalVisible","reviewData","thumbnailUrl","author","relayedVideoCount","videoId","linkedProduct","description","cursor","onClick","videoUrl","visible","onOk","onCancel","replace","autoPlay","controls","ItemDeleteButton","confirm","Modal","disabled","disable","icon","ExclamationCircleOutlined","content","okText","okType","cancelText","type","deleteReview","onSuccess","getProduct","then","requesterId","seller","deleteProduct","deleteOrder","ClearOutlined","ReviewTable","reviewList","setReviewList","handleDeleteSuccess","filter","item","ellipsis","categoryCode","key","header","ReviewDownloadButton","handleDownloadSheet","workbook","ExcelJS","worksheet","addWorksheet","index","addRow","productTitle","reviewTitle","reviewDescription","authorName","mimeType","xlsx","writeBuffer","buffer","blob","Blob","today","Date","year","getFullYear","month","getMonth","slice","day","getDate","dateString","saveAs","ReviewListView","reviewListData","setReviewListData","searchType","setSearchType","category","setCategory","searchWord","setSearchWord","Option","Select","handleSelectChange","getReviewList","handleSearch","getUser","userUploadVideo","updateReviewList","limit","float","Group","target","margin","defaultValue","ProductCard","productData","commentCount","productId","price","discountPrice","discountRate","ProductTable","productList","setProductList","linkedVideoCount","ProductListView","productListData","setProductListData","getProductList","updateProductList","OrderCard","orderData","orderId","cartItems","product","length","totalPrice","shipmentCost","number","address","buyerName","buyer","buyerPhone","buyerEmail","receiverName","receiverPhone","memo","actionMemoBuyer","actionMemoSeller","orderStatus","Map","OrderTable","orderList","setOrderList","OrderDownloadButton","OrderListView","orderListData","setOrderListData","setOrderStatus","handleOrderStatusSelectChange","getOrderList","updateOrderList","RevenueCard","revenueData","_id","order","contributionRate","user","video","purchaseCompletedAt","isValid","RevenueTable","revenueList","setRevenueList","paidAt","RevenueDownloadButton","shipmentCompletedAt","RevenueListView","revenueListData","setRevenueListData","setValid","handleValidSelectChange","getRevenueList","resultRevenue","resultOrder","revenueItem","orders","orderItem","updateRevenueList","ReviewerRevenueListView","TestPage","SubMenu","Menu","Header","Layout","Content","Sider","className","fontSize","fontWeight","color","mode","borderRight","UserOutlined","Strings","to","SolutionOutlined","InboxOutlined","ShoppingCartOutlined","DollarOutlined","CreditCardOutlined","padding","minHeight","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9e01e175.chunk.js","sourcesContent":["// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    MENU_USER_MANAGEMENT : \"사용자 관리\",\n    MENU_REVIEW_MANAGEMENT : \"리뷰 영상 관리\",\n    MENU_PRODUCT_MANAGEMENT : \"제품 관리\",\n    MENU_ORDER_MANAGEMENT : \"주문 관리\",\n    MENU_SALES_MANAGEMENT : \"매출 내역 관리\",\n    MENU_BILLING_MANAGEMENT : \"정산 관리\",\n    SUB_USER_MANAGEMENT : \"사용자 조회 및 관리\",\n    SUB_REVIEW_MANAGEMENT : \"영상 조회 및 관리\",\n    SUB_PRODUCT_MANAGEMENT : \"제품 조회 및 관리\",\n    SUB_ORDER_MANAGEMENT : \"주문 조회 및 관리\",\n    SUB_SALES_MANAGEMENT : \"매출 내역 조회\",\n    SUB_REVIEW_REWARDS_MANAGEMENT : \"리뷰 리워드 조회 및 관리\",\n    SUB_BILLING_MANAGEMENT : \"정산 관리\",\n}","import { Layout, Menu } from \"antd\";\nimport {\n    UserOutlined,\n    SolutionOutlined,\n    InboxOutlined,\n    ShoppingCartOutlined,\n    DollarOutlined,\n    CreditCardOutlined,\n} from \"@ant-design/icons\";\nimport 'antd/dist/antd.css';\nimport Strings from \"../strings/kor\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction MainPage() {\n    const { SubMenu } = Menu;\n    const { Header, Content, Sider } = Layout;\n\n    return (\n        <Router>\n        <Layout>\n            <Header className=\"header\">\n                <div className=\"logo\" style={{fontSize:\"30px\", fontWeight: \"bold\", color: \"white\"}}>\n                    greyd Admin\n                </div>\n            </Header>\n            <Layout>\n                <Sider width={200} className=\"site-layout-background\">\n                    <Menu\n                        mode=\"inline\"\n                        defaultSelectedKeys={[\"1\"]}\n                        defaultOpenKeys={[\"user\"]}\n                        style={{ height: \"100%\", borderRight: 0 }}\n                    >\n                        <SubMenu key=\"user\" icon={<UserOutlined />} title={Strings.MENU_USER_MANAGEMENT}>\n                            <Menu.Item key=\"1\">\n                                <Link to=\"/user\">\n                                    {Strings.SUB_USER_MANAGEMENT}\n                                </Link>\n                            </Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"review\" icon={<SolutionOutlined />} title={Strings.MENU_REVIEW_MANAGEMENT}>\n                            <Menu.Item key=\"2\">\n                                <Link to=\"/review\">\n                                    {Strings.SUB_REVIEW_MANAGEMENT}\n                                </Link>\n                            </Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"product\" icon={<InboxOutlined />} title={Strings.MENU_PRODUCT_MANAGEMENT}>\n                            <Menu.Item key=\"3\">\n                                <Link to=\"/product\">\n                                    {Strings.SUB_PRODUCT_MANAGEMENT}\n                                </Link>\n                            </Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"order\" icon={<ShoppingCartOutlined />} title={Strings.MENU_ORDER_MANAGEMENT}>\n                            <Menu.Item key=\"4\">\n                                <Link to=\"/order\">\n                                    {Strings.SUB_ORDER_MANAGEMENT}\n                                </Link>\n                            </Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"sales\" icon={<DollarOutlined />} title={Strings.MENU_SALES_MANAGEMENT}>\n                            <Menu.Item key=\"5\">\n                                <Link to=\"/sales\">\n                                    {Strings.SUB_SALES_MANAGEMENT}\n                                </Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"6\">\n                                <Link to=\"/review-rewards\">\n                                    {Strings.SUB_REVIEW_REWARDS_MANAGEMENT}\n                                </Link>\n                            </Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"billing\" icon={<CreditCardOutlined />} title={Strings.MENU_BILLING_MANAGEMENT}>\n                            <Menu.Item key=\"7\">\n                                <Link to=\"/billing\">\n                                    {Strings.SUB_BILLING_MANAGEMENT}\n                                </Link>\n                            </Menu.Item>\n                        </SubMenu>\n                    </Menu>\n                </Sider>\n                <Layout style={{ padding: \"0 24px 24px\" }}>\n                    <Content\n                        className=\"site-layout-background\"\n                        style={{\n                            padding: 24,\n                            margin: 0,\n                            minHeight: 280,\n                        }}\n                    >\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <div>목록을 클릭해 주세요</div>\n                            </Route>\n                            <Route path=\"/user\">\n                                <div>user</div>\n                            </Route>\n                            <Route path=\"/review\">\n                                <div>review</div>\n                            </Route>\n                            <Route path=\"/product\">\n                                <div>product</div>\n                            </Route>\n                            <Route path=\"/order\">\n                                <div>order</div>\n                            </Route>\n                            <Route path=\"/sales\">\n                                <div>sales</div>\n                            </Route>\n                            <Route path=\"/review-rewards\">\n                                <div>review-rewards</div>\n                            </Route>\n                            <Route path=\"/billing\">\n                                <div>billing</div>\n                            </Route>\n                        </Switch>\n                    </Content>\n                </Layout>\n            </Layout>\n        </Layout>\n        </Router>\n    )\n}\n\nexport default MainPage;","export default __webpack_public_path__ + \"static/media/defaultMan.9b0320c1.png\";","import React from 'react';\nimport {Descriptions, Row, Col, Statistic} from 'antd';\nimport defaultMan from './../assets/defaultMan.png';\nimport {\n    ManOutlined,\n    WomanOutlined,\n} from \"@ant-design/icons\";\n\nfunction UserCard (props)\n{\n    const userData = props.userData;\n    console.log(props.userData);\n    return (\n        <>\n        <div style={{display: 'table', width: '100%'}}>\n            <div style={{display: 'table-row', verticalAlign: 'middle'}}>\n                <div style={{display: 'table-cell', textAlign: 'center', width: '200px'}}>\n                    {userData.profilePicUrl?\n                    <img style={{\n                            //borderRadius: \"50%\",\n                            width: 150,\n                            height: 150,\n                        }} \n                        src={userData.profilePicUrl}/>:\n                    <img style={{\n                            //borderRadius: \"50%\",\n                            width: 150,\n                            height: 150,\n                        }} \n                        src={defaultMan}/>}\n                    <div>{userData.name}{userData.isSeller?'(Seller)':''} {userData.gender===0?<ManOutlined/>:<WomanOutlined/>}</div>\n                    <div>{userData.email}</div>\n                    <div>{userData.phone?userData.phone:'-'}</div>\n                </div>\n                <div style={{display: 'table-cell', textAlign: 'center', width: 'auto'}}>\n                    <Row gutter={16}>\n                        <Col span={5}>\n                        <Statistic title=\"Follower/Following\" value={userData.followerCount + '/' + userData.followingCount} />\n                        </Col>\n                        <Col span={5}>\n                        <Statistic title=\"RatingScore/Count\" value={userData.ratingScore + '/' + userData.ratingCount} />\n                        </Col>\n                        <Col span={5}>\n                        <Statistic title=\"매출기여액\" value={userData.revenueAmount} />\n                        </Col>\n                        <Col span={5}>\n                        <Statistic title=\"수익\" value={userData.profitAmount} />\n                        </Col>\n                        <Col span={4}>\n                        <Statistic title=\"리뷰수\" value={userData.videoCount} />\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n            </div>\n            <Descriptions bordered>\n                <Descriptions.Item label=\"userId\">{userData.userId}</Descriptions.Item>\n                <Descriptions.Item label=\"reportCount\">{userData.class}</Descriptions.Item>\n                <Descriptions.Item label=\"statusCode\">{userData.statusCode}</Descriptions.Item>\n                <Descriptions.Item label=\"balance\">{userData.balance}</Descriptions.Item>\n                <Descriptions.Item label=\"viewCount\">{userData.viewCount}</Descriptions.Item>\n                <Descriptions.Item label=\"class\">{userData.reportCount}</Descriptions.Item>\n                <Descriptions.Item label=\"createdAt\">{userData.createdAt}</Descriptions.Item>\n                <Descriptions.Item label=\"updatedAt\">{userData.updatedAt}</Descriptions.Item>\n                <Descriptions.Item label=\"vtype\">{userData.vtype}</Descriptions.Item>\n                <Descriptions.Item label=\"profileUrl\" span={3}>{userData.profilePicUrl}</Descriptions.Item>\n                <Descriptions.Item label=\"introduction\" span={3}>{userData.introduction}</Descriptions.Item>\n            </Descriptions>\n            {userData.isSeller && <Descriptions bordered>\n                <Descriptions.Item label=\"sellerCertificationNo\">{userData.sellerCertificationNo}</Descriptions.Item>\n                <Descriptions.Item label=\"sellerCertificationUrl\" span={2}>{userData.sellerCertificationUrl}</Descriptions.Item>\n                <Descriptions.Item label=\"sellerBankName\">{userData.sellerBankName}</Descriptions.Item>\n                <Descriptions.Item label=\"sellerBankAccount\">{userData.sellerBankAccount}</Descriptions.Item>\n                <Descriptions.Item label=\"sellerBankAccountHolder\">{userData.sellerBankAccountHolder}</Descriptions.Item>\n                <Descriptions.Item label=\"sellerPhone\">{userData.sellerPhone}</Descriptions.Item>\n                <Descriptions.Item label=\"sellerBusinessName\">{userData.sellerBusinessName}</Descriptions.Item>\n                <Descriptions.Item label=\"sellerContactForCustomer\">{userData.sellerContactForCustomer}</Descriptions.Item>\n                <Descriptions.Item label=\"sellerOwnerName\">{userData.sellerOwnerName}</Descriptions.Item>\n                <Descriptions.Item label=\"sellerCorperateRegistrationNumber\">{userData.sellerCorperateRegistrationNumber}</Descriptions.Item>\n                <Descriptions.Item label=\"sellerManagerName\">{userData.sellerManagerName}</Descriptions.Item>\n                <Descriptions.Item label=\"sellerManagerContact\">{userData.sellerManagerContact}</Descriptions.Item>\n                <Descriptions.Item label=\"sellerManagerEmail\">{userData.sellerManagerEmail}</Descriptions.Item>\n                <Descriptions.Item label=\"sellerOfficeAddress\">{userData.sellerOfficeAddress}</Descriptions.Item>\n                <Descriptions.Item label=\"sellerShipmentAddress\">{userData.sellerShipmentAddress}</Descriptions.Item>\n                <Descriptions.Item label=\"sellerExchangeReturnAddress\">{userData.sellerExchangeReturnAddress}</Descriptions.Item>\n            </Descriptions>}\n        </>\n    );\n}\n\nexport default UserCard;\n\n/* userData sample\n        \"store\": {\n            \"profitAmount\": 0,\n            \"revenueAmount\": 0,\n            \"orderCount\": 0,\n            \"newOrderCount\": 0,\n            \"preparingOrderCount\": 0,\n            \"shippingOrderCount\": 0,\n            \"shipmentCompletedOrderCount\": 0,\n            \"purchaseCompletedOrderCount\": 0,\n            \"rejectedOrderCount\": 0,\n            \"purchaseCanceledOrderCount\": 0\n        },\n        \"statusCode\": 0,\n        \"vtype\": 0,\n        \"email\": \"crysta06@naver.com\",\n        \"phone\": \"\",\n        \"profilePicUrl\": \"https://resource.greyd.app/userProfilePic/1630823619291_cfa36d12791fa841ef8f2f79084bcc61.JPEG\",\n        \"profilePicPath\": \"userProfilePic/1630823619291_cfa36d12791fa841ef8f2f79084bcc61.JPEG\",\n        \"birthYear\": 0,\n        \"gender\": 0,\n        \"introduction\": \"\",\n        \"class\": 0,\n        \"ratingScore\": 0,\n        \"followerCount\": 0,\n        \"followingCount\": 0,\n        \"revenueAmount\": 0,\n        \"profitAmount\": 0,\n        \"balance\": 0,\n        \"videoCount\": 0,\n        \"productCount\": 0,\n        \"viewCount\": 0,\n        \"reportCount\": 0,\n        \"isSeller\": false,\n        \"sellerCertificationNo\": \"\",\n        \"sellerCertificationUrl\": \"\",\n        \"sellerCertificationPath\": \"\",\n        \"sellerBankName\": \"\",\n        \"sellerBankAccount\": \"\",\n        \"sellerBankAccountHolder\": \"\",\n        \"sellerPhone\": \"\",\n        \"sellerBusinessName\": \"\",\n        \"sellerContactForCustomer\": \"\",\n        \"sellerOwnerName\": \"\",\n        \"sellerCorperateRegistrationNumber\": \"\",\n        \"sellerManagerName\": \"\",\n        \"sellerManagerContact\": \"\",\n        \"sellerManagerEmail\": \"\",\n        \"sellerOfficeAddress\": \"\",\n        \"sellerShipmentAddress\": \"\",\n        \"sellerExchangeReturnAddress\": \"\",\n        \"authType\": \"kakao\",\n        \"_id\": \"61346175597e6958ea8a9187\",\n        \"name\": \"crysta06\",\n        \"createdAt\": \"2021-09-05T06:19:33.342Z\",\n        \"updatedAt\": \"2021-09-05T06:33:40.627Z\",\n        \"__v\": 0,\n        \"userId\": \"61346175597e6958ea8a9187\",\n        \"ratingCount\": 0,\n        \"id\": \"61346175597e6958ea8a9187\"\n*/","import React from \"react\";\nimport 'antd/dist/antd.css';\nimport { Table } from 'antd';\n\nimport UserCard from \"./UserCard\";\n\n\nconst columns = [\n    {\n        title: '이름',\n        dataIndex: 'name',\n    },\n    {\n        title: '레이팅\\n점수',\n        dataIndex: 'ratingScore',\n        sorter: {\n            compare: (a, b) => a.ratingScore - b.ratingScore,\n            multiple: 11,\n        },\n    },\n    {\n        title: '레이팅\\n횟수',\n        dataIndex: 'ratingCount',\n        sorter: {\n            compare: (a, b) => a.ratingCount - b.ratingCount,\n            multiple: 10,\n        },\n    },\n    {\n        title: '팔로워',\n        dataIndex: 'followerCount',\n        sorter: {\n            compare: (a, b) => a.followerCount - b.followerCount,\n            multiple: 9,\n        },\n    },\n    {\n        title: '팔로잉',\n        dataIndex: 'followingCount',\n        sorter: {\n            compare: (a, b) => a.followingCount - b.followingCount,\n            multiple: 8,\n        },\n    },\n    {\n        title: '매출\\n기여액',\n        dataIndex: 'revenueAmount',\n        sorter: {\n            compare: (a, b) => a.revenueAmount - b.revenueAmount,\n            multiple: 7,\n        },\n    },\n    {\n        title: '수익',\n        dataIndex: 'profitAmount',\n        sorter: {\n            compare: (a, b) => a.profitAmount - b.profitAmount,\n            multiple: 6,\n        },\n    },\n    {\n        title: '잔여금',\n        dataIndex: 'balance',\n        sorter: {\n            compare: (a, b) => a.balance - b.balance,\n            multiple: 5,\n        },\n    },\n    {\n        title: '업로드\\n리뷰',\n        dataIndex: 'videoCount',\n        sorter: {\n            compare: (a, b) => a.videoCount - b.videoCount,\n            multiple: 4,\n        },\n    },\n    {\n        title: '등록제품',\n        dataIndex: 'productCount',\n        sorter: {\n            compare: (a, b) => a.productCount - b.productCount,\n            multiple: 3,\n        },\n    },\n    {\n        title: '판매자',\n        dataIndex: '',\n        render: record=><span>{`${record.isSeller}`}</span>\n    },\n    {\n        title: '가입시점',\n        dataIndex: 'createdAt',\n        sorter: {\n            compare: (a, b) => a.createdAt - b.createdAt,\n            multiple: 1,\n        },\n    },\n];\n\nfunction onChange(pagination, filters, sorter, extra) {\n    console.log('params', pagination, filters, sorter, extra);\n}\n\nfunction UserTable(props) {\n    console.log(\"userInfoList : \", props.userInfoList);\n    return (\n        <Table\n            columns={columns}\n            dataSource={props.userInfoList}\n            rowKey={record => { return record.id }}\n            expandable={{\n                expandedRowRender: record => <UserCard userData={record} />,\n                rowExpandable: record => true,\n            }}\n            onChange={onChange}\n        />\n    )\n}\n\nexport default UserTable;\n","import axios from 'axios';\n\n// const API_ROOT_URL = 'https://api.greyd.app';\nconst API_ROOT_URL = 'http://localhost:3340';\n//const API_ROOT_URL = \"http://172.30.1.15:3340\";\n\n// greydadmin@arbaim.com\nconst TEST_USER = '61f3878db2edda4ceeff9eba';\nconst TEST_TOKEN =\n  '43713d9b6149d661b1cc033cb38089d95e5dd14be86b6c25e360c5f6355fcb4e';\n\nclass API {\n  static get(path, data) {\n    let payloadString = '';\n    payloadString =\n      `?requesterId=${TEST_USER}&requesterToken=${TEST_TOKEN}&` +\n      Object.entries(data)\n        .map((e) => e.join('='))\n        .join('&');\n    return axios.get(`${API_ROOT_URL}${path}${payloadString}`);\n  }\n  static post(path, data) {\n    return axios.post(`${API_ROOT_URL}${path}`, data);\n  }\n  static put(path, data) {\n    return axios.put(`${API_ROOT_URL}${path}`, data);\n  }\n  static delete(path, data) {\n    return axios.delete(`${API_ROOT_URL}${path}`, { data: data });\n  }\n}\n\nclass AdminRepository {\n  static getUserList(params) {\n    const path = '/users';\n    return API.get(path, params ? params : {});\n  }\n  static getUser(id, params) {\n    const path = '/users/' + id;\n    return API.get(path, params ? params : {});\n  }\n  static getReviewList(params) {\n    const path = '/videos';\n    return API.get(path, params ? params : {});\n  }\n  static deleteReview(id, params) {\n    const path = '/videos/' + id;\n    return API.delete(path, params ? params : {});\n  }\n  static getProductList(params) {\n    const path = '/products';\n    return API.get(path, params ? params : {});\n  }\n  static getProduct(id, params) {\n    const path = '/products/' + id;\n    console.log(path);\n    if (!id) return;\n    return API.get(path, params ? params : {});\n  }\n  static deleteProduct(id, params) {\n    const path = '/products/' + id;\n    console.log(path);\n    if (!id) return;\n    return API.delete(path, params ? params : {});\n  }\n  static getOrderList(params) {\n    const path = '/orders';\n    return API.get(path, params ? params : {});\n  }\n  static deleteOrder(id, params) {\n    const path = '/orders/' + id;\n    return API.delete(path, params ? params : {});\n  }\n  static getRevenueList(params) {\n    const path = `/revenues`;\n    return API.get(path, params ? params : {});\n  }\n}\n\nexport default AdminRepository;\n","import React, { useState, useEffect } from 'react';\nimport UserTable from \"../molecules/UserTable\";\nimport AdminRepository from \"../repositories/AdminRepository\";\n\nimport { Input } from 'antd';\n\n// TODO: 유저 리스트 조회 API 로직 보완, 20개 이상의 리스트가 보여지도록\n// TODO: Style 정리, 문자열 constant 정리\n\nfunction UserListView () {\n    const [userListData, setUserListData] = useState([]);\n    const { Search } = Input;\n\n    const onSearch = async (value) => {\n        const params = {'searchKeyword': value};\n        // TODO : 추가적으로 item을 부르도록 수정해야 함.\n        // 임시 코드\n        params['limit'] = 3000;\n\n        const result = await AdminRepository.getUserList(params);\n        setUserListData(result.data);\n        console.log('search : ', result.data);\n    }\n    const updateUserList = async (params) => {\n        const result = await AdminRepository.getUserList(params);\n        setUserListData(result.data);\n    }\n\n    useEffect(()=>{\n        const params = {'limit': 3000};\n        updateUserList(params);\n    },[]);\n\n    return (\n        <div>\n            <Search placeholder=\"input search text\" allowClear onSearch={onSearch} style={{ width: 300 }} />\n            <UserTable userInfoList={userListData}/>\n        </div>\n    )\n}\n\nexport default UserListView;\n","import React from 'react';\nimport {Descriptions, Row, Col, Statistic, Modal} from 'antd';\nimport 'antd/dist/antd.css';\nimport ReactHlsPlayer from 'react-hls-player';\n\nfunction ReviewCard (props)\n{\n    const [modalVisible, setModalVisible] = React.useState(false);\n  \n    const showModal = () => {\n        console.log('Show Modal!!');\n        setModalVisible(true);\n    };\n    const handleModalOk = () => {\n        setModalVisible(false);\n    };\n    const handleModalCancel = () => {\n        setModalVisible(false);\n    };\n\n    const reviewData = props.reviewData;\n    console.log(props.reviewData);\n    return (\n        <>\n        <div style={{display: 'table', width: '100%'}}>\n            <div style={{display: 'table-row', verticalAlign: 'middle'}}>\n                <div style={{display: 'table-cell', textAlign: 'center', width: '200px'}}>\n                    {reviewData.thumbnailUrl?\n                    <img style={{\n                            //borderRadius: \"50%\",\n                            width: 150,\n                            height: 150,\n                        }} \n                        src={reviewData.thumbnailUrl}/>:\n                    <img style={{\n                            //borderRadius: \"50%\",\n                            width: 150,\n                            height: 150,\n                        }} />}\n                        <div>{reviewData.author.name} Review</div>\n                </div>\n                <div style={{display: 'table-cell', textAlign: 'center', width: 'auto'}}>\n                    <Row gutter={16}>\n                        <Col span={6}>\n                        <Statistic title=\"조회수\" value={reviewData.viewCount} />\n                        </Col>\n                        <Col span={6}>\n                        <Statistic title=\"RatingScore/Count\" value={reviewData.ratingScore + '/' + reviewData.ratingCount} />\n                        </Col>\n                        <Col span={6}>\n                        <Statistic title=\"매출기여액\" value={reviewData.revenueAmount} />\n                        </Col>\n                        <Col span={6}>\n                        <Statistic title=\"같은 제품 리뷰\" value={reviewData.relayedVideoCount} />\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n            </div>\n            <Descriptions bordered>\n                <Descriptions.Item label=\"ReviewId\">{reviewData.videoId}</Descriptions.Item>\n                <Descriptions.Item label=\"제품\" span={2} >{reviewData.linkedProduct.title}</Descriptions.Item>\n                <Descriptions.Item label=\"title\" span={3} >{reviewData.title}</Descriptions.Item>\n                <Descriptions.Item label=\"description\" span={3} >{reviewData.description}</Descriptions.Item>\n                <Descriptions.Item label=\"createdAt\" span={2} >{reviewData.createdAt}</Descriptions.Item>\n                <Descriptions.Item label=\"vtype\">{`${reviewData.vtype}`}</Descriptions.Item>\n                <Descriptions.Item label=\"videoUrl\" span={3}>\n                    <span style={{cursor: 'pointer'}}onClick={showModal}>{reviewData.videoUrl}</span>\n                </Descriptions.Item>\n                <Descriptions.Item label=\"thumbnailUrl\" span={3}>{reviewData.thumbnailUrl}</Descriptions.Item>\n            </Descriptions>\n            <Modal title={reviewData.title} visible={modalVisible} onOk={handleModalOk} onCancel={handleModalCancel}>\n                <ReactHlsPlayer\n                    src={reviewData.videoUrl.replace('https://resource.greyd.app',\"\")}\n                    autoPlay={true}\n                    controls={true}\n                    width=\"100%\"\n                    height=\"300px\"\n                />\n            </Modal>\n        </>\n    );\n}\n\nexport default ReviewCard;\n/*\n{\n    \"linkedProduct\": {\n        \"thumbnailUrl\": \"https://resource.greyd.app/productImage/1628128555718_7a619e4be15eeaee714bca6d075270ee.JPEG\",\n        \"discountPrice\": 19600,\n        \"discountRate\": 0.32,\n        \"_id\": \"610a9ea6c48fa72335c536a0\",\n        \"title\": \"리노베라 칼슘파우더 친환경 과일세정제 150g\",\n        \"price\": 29000,\n        \"productId\": \"610a9ea6c48fa72335c536a0\",\n        \"ratingCount\": 0,\n        \"id\": \"610a9ea6c48fa72335c536a0\"\n    },\n    \"ratingCountList\": {\n        \"0\": 0,\n        \"1\": 0,\n        \"2\": 0,\n        \"3\": 0,\n        \"4\": 0,\n        \"5\": 0,\n        \"6\": 0,\n        \"7\": 0,\n        \"8\": 0,\n        \"9\": 0,\n        \"10\": 2\n    },\n    \"title\": \"Must have item for your kitchen💖\",\n    \"description\": \"This fruit and veggies wash is great!!\\n\\nI soaked fruits and vegetables in water with the powder and moments later I could see pesticides and preservatives dissolved in the solution floating in the water. This is awesome.\\n\\nAnd I like it so much cause it's made of 100% natural ingredients. Easy to use, and reliable, No regret.\\n\\nI should have bought it earlier. I really had no idea that baking soda and vinegar are similar to water in effect..\\n\\nNow I can't eat any veggies and fruits without washing with this! I'm so glad I found this product. Higly recommended for every kitchen!\",\n    \"viewCount\": 89,\n    \"ratingScore\": 10,\n    \"relayedVideoCount\": 0,\n    \"_id\": \"6126f313065b3e7253b7e3c4\",\n    \"author\": {\n        \"profilePicUrl\": \"\",\n        \"class\": 0,\n        \"_id\": \"611c9faf7c30992bb5d10a4a\",\n        \"name\": \"Joyce\",\n        \"userId\": \"611c9faf7c30992bb5d10a4a\",\n        \"ratingCount\": 0,\n        \"id\": \"611c9faf7c30992bb5d10a4a\"\n    },\n    \"thumbnailUrl\": \"https://resource.greyd.app/videoThumbnail/1629942545941_3416f288ad7ff46a6982da002f4db8dc.jpg\",\n    \"videoUrl\": \"https://resource.greyd.app/videos/6126f313065b3e7253b7e3c4/manifest.m3u8\",\n    \"createdAt\": \"2021-08-26T01:49:07.823Z\",\n    \"bookmarkList\": [],\n    \"videoId\": \"6126f313065b3e7253b7e3c4\",\n    \"ratingCount\": 2,\n    \"id\": \"6126f313065b3e7253b7e3c4\"\n},\n*/","import React from 'react';\nimport {\n    ClearOutlined,\n} from \"@ant-design/icons\";\nimport { Modal, Button } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\n\nimport AdminRepository from '../repositories/AdminRepository';\n\nfunction ItemDeleteButton (props) {\n    const { confirm } = Modal;\n\n    function showDeleteConfirm() {\n        confirm({\n        title: 'Are you sure delete this record?',\n        icon: <ExclamationCircleOutlined />,\n        content: '',\n        okText: 'Yes',\n        okType: 'danger',\n        cancelText: 'No',\n        onOk() {\n            console.log('OK');\n            \n            const record = props.record;\n            switch(props.type) {\n                case 'review':\n                    AdminRepository.deleteReview(record.id);\n                    props.onSuccess(record);\n                    break;\n                case 'product':\n                    AdminRepository.getProduct(record.id).then((result)=>{\n                        const params = {requesterId: result.data.seller.id};\n                        AdminRepository.deleteProduct(record.id, params).then(()=>{\n                            props.onSuccess(record);\n                        });\n                    });\n                    break;\n                case 'order':\n                    AdminRepository.deleteOrder(record.id);\n                    props.onSuccess(record);\n                    break;\n                default:\n                    console.log('예외 케이스');\n            }\n        },\n        onCancel() {\n            console.log('Cancel');\n        },\n        });\n    }\n\n    return (\n        <>\n            <Button disabled={props.disable?props.disable:true} onClick={showDeleteConfirm}><ClearOutlined />Delete</Button>\n        </>\n    );\n}\n\nexport default ItemDeleteButton;\n","import React, {useEffect, useState} from \"react\";\nimport 'antd/dist/antd.css';\nimport { Table } from 'antd';\n\nimport ReviewCard from \"./ReviewCard\";\nimport ItemDeleteButton from \"./ItemDeleteButton\";\n\n\nfunction onChange(pagination, filters, sorter, extra) {\n    console.log('params', pagination, filters, sorter, extra);\n}\n\nfunction ReviewTable(props) {\n    const [reviewList, setReviewList] = useState(props.reviewList);\n    useEffect(()=>{\n        setReviewList(props.reviewList);\n    },[props.reviewList]);\n    const handleDeleteSuccess = record => {\n        console.log(\"record : \", record);\n        setReviewList(reviewList.filter(function(item) {\n            return item !== record;\n        }));\n    }\n    const columns = [\n        {\n            title: '제품',\n            dataIndex: '',\n            render: record => <span>{record.linkedProduct.title}</span>,\n            width: '250px',\n            ellipsis: true\n        },\n        {\n            title: '카테고리',\n            dataIndex: '',\n            render: record => <span>{record.linkedProduct.categoryCode}</span>,\n        },\n        {\n            title: '작성자',\n            dataIndex: '',\n            render: record => <span>{record.author.name}</span>,\n            ellipsis: true\n        },\n        {\n            title: '조회수',\n            dataIndex: 'viewCount',\n            sorter: {\n                compare: (a, b) => a.viewCount - b.viewCount,\n                multiple: 4,\n            },\n        },\n        {\n            title: '레이팅 점수',\n            dataIndex: 'ratingScore',\n            sorter: {\n                compare: (a, b) => a.ratingScore - b.ratingScore,\n                multiple: 3,\n            },\n        },\n        {\n            title: '레이팅 횟수',\n            dataIndex: 'ratingCount',\n            sorter: {\n                compare: (a, b) => a.ratingCount - b.ratingCount,\n                multiple: 2,\n            },\n        },\n        {\n            title: '등록시점',\n            dataIndex: 'createdAt',\n            sorter: {\n                compare: (a, b) => a.createdAt - b.createdAt,\n                multiple: 1,\n            },\n            width: '200px',\n            ellipsis: true\n        },\n        {\n            title: '관리',\n            dataIndex: '',\n            key: 'x',\n            render: record => <ItemDeleteButton type='review' record={record} onSuccess={handleDeleteSuccess}/>,\n        },\n    ];\n    console.log(\"reviewList : \", reviewList);\n    return (\n        <Table\n            columns={columns}\n            dataSource={reviewList}\n            rowKey={record => { return record.videoId }}\n            expandable={{\n                expandedRowRender: record => <ReviewCard reviewData={record} />,\n                rowExpandable: record => true,\n            }}\n            onChange={onChange}\n        />\n    )\n}\n\nexport default ReviewTable;\n","import React from 'react';\nimport {Button} from 'antd';\nimport * as ExcelJS from \"exceljs\";\nimport { saveAs } from \"file-saver\";\n\nconst columns = [\n    {\n        header: '리뷰번호',\n        key: 'id',\n        width: 28\n    },\n    {\n        header: '제품',\n        key: 'productTitle',\n        width: 76\n    },\n    {\n        header: '제목',\n        key: 'reviewTitle',\n        width: 76\n    },\n    {\n        header: '설명',\n        key: 'reviewDescription',\n        width: 76\n    },\n    {\n        header: '조회수',\n        key: 'viewCount',\n        width: 9\n    },\n    {\n        header: '레이팅 점수',\n        key: 'ratingScore',\n        width: 9\n    },\n    {\n        header: '레이팅 횟수',\n        key: 'ratingCount',\n        width: 9\n    },\n    {\n        header: '매출기여액',\n        key: 'revenueAmount',\n        width: 13\n    },\n    {\n        header: '작성자',\n        key: 'authorName',\n        width: 13\n    },\n    {\n        header: 'URL',\n        key: 'videoUrl',\n        width: 27\n    },\n    {\n        header: '등록일시',\n        key: 'createdAt',\n        width: 27\n    },\n];\n\nfunction ReviewDownloadButton (props) {\n    const handleDownloadSheet = async () => {\n        //productListData\n        const workbook = new ExcelJS.Workbook();\n        const worksheet = workbook.addWorksheet(\"리뷰 목록\"); // sheet 이름이 My Sheet // sheet 데이터 설정\n        worksheet.columns = columns;\n        props.reviewList.map( (record, index) => {\n                const result = worksheet.addRow({\n                    id: record.videoId,\n                    productTitle: record.linkedProduct.title,\n                    reviewTitle: record.title,\n                    reviewDescription: record.description,\n                    authorName: record.author.name,\n                    viewCount: record.viewCount,\n                    ratingScore: record.ratingScore,\n                    ratingCount: record.ratingCount,\n                    createdAt: record.createdAt.replace(\"T\",\" \").replace(\"Z\",\"\"),\n                    revenueAmount: record.revenueAmount,\n                    videoUrl: record.videoUrl,\n                });\n            return result;\n        });\n\n        const mimeType = { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" };\n        const buffer = await workbook.xlsx.writeBuffer();\n        const blob = new Blob([buffer], mimeType);\n\n        const today = new Date();\n        const year = today.getFullYear();\n        const month = ('0' + (today.getMonth() + 1)).slice(-2);\n        const day = ('0' + today.getDate()).slice(-2);\n\n        const dateString = year + month + day;\n        saveAs(blob, `리뷰목록-${dateString}.xlsx`);\n    }\n    return (<Button onClick={handleDownloadSheet}>다운로드</Button>);\n}\n\nexport default ReviewDownloadButton;\n","import React, { useState, useEffect } from 'react';\nimport ReviewTable from '../molecules/ReviewTable';\nimport AdminRepository from '../repositories/AdminRepository';\nimport ReviewDownloadButton from '../molecules/ReviewDownloadButton';\n\nimport { Input, Select, Radio } from 'antd';\n\n// TODO: 리뷰 리스트 조회 API 로직 보완, 20개 이상의 리스트가 보여지도록\n// TODO: Style 정리, 문자열 constant 정리\n\nfunction ReviewListView() {\n  const [reviewListData, setReviewListData] = useState([]);\n  const [searchType, setSearchType] = useState('keyword');\n  const [category, setCategory] = useState('all');\n  const [searchWord, setSearchWord] = useState('');\n  const { Search } = Input;\n  const { Option } = Select;\n\n  const handleRadioChange = (e) => {\n    setSearchType(e.target.value);\n  };\n  const handleSelectChange = async (value) => {\n    setCategory(value);\n    let params = {};\n    if (value !== 'all') params['categoryCode'] = value;\n\n    // TODO : 추가적으로 item을 부르도록 수정해야 함.\n    // 임시 코드\n    params['limit'] = 3000;\n\n    const result = await AdminRepository.getReviewList(params);\n    setReviewListData(result.data);\n  };\n  const handleSearch = async (value) => {\n    let params = {};\n    if (category !== 'all') params['categoryCode'] = category;\n    if (value !== '') {\n      if (searchType === 'keyword') params['searchKeyword'] = value;\n      else if (searchType === 'userId') params['userId'] = value;\n      else if (searchType === 'productId') params['productId'] = value;\n    }\n\n    // TODO : 추가적으로 item을 부르도록 수정해야 함.\n    // 임시 코드\n    params['limit'] = 3000;\n    if (searchType === 'userId' && value) {\n      const result = await AdminRepository.getUser(value);\n      setSearchWord(value);\n      setReviewListData(result.data.userUploadVideo);\n    } else {\n      const result = await AdminRepository.getReviewList(params);\n      setSearchWord(value);\n      setReviewListData(result.data);\n    }\n  };\n  const updateReviewList = async (params) => {\n    const result = await AdminRepository.getReviewList(params);\n    setReviewListData(result.data);\n  };\n\n  useEffect(() => {\n    const params = { limit: 3000 };\n    updateReviewList(params);\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <Search\n          placeholder='input search text'\n          allowClear\n          onSearch={handleSearch}\n          style={{ width: '40%', float: 'left' }}\n        />\n        <Radio.Group\n          onChange={handleRadioChange}\n          value={searchType}\n          style={{ float: 'left', margin: '0px 10px' }}\n        >\n          <Radio value={'keyword'}>keyword</Radio>\n          <Radio value={'userId'}>userId</Radio>\n          <Radio value={'productId'}>productId</Radio>\n        </Radio.Group>\n        <Select\n          defaultValue={category}\n          style={{ width: '15%', float: 'right' }}\n          onChange={handleSelectChange}\n        >\n          <Option value='all'>all</Option>\n          <Option value='fashion'>fashion</Option>\n          <Option value='food'>food</Option>\n          <Option value='beauty'>beauty</Option>\n          <Option value='living'>living</Option>\n          <Option value='health'>health</Option>\n          <Option value='child'>child</Option>\n          <Option value='interior'>interior</Option>\n          <Option value='digital'>digital</Option>\n          <Option value='sports'>sports</Option>\n          <Option value='animal'>animal</Option>\n          <Option value='hobby'>hobby</Option>\n          <Option value='others'>others</Option>\n        </Select>\n        <ReviewDownloadButton\n          reviewList={reviewListData}\n          style={{ width: '15%', float: 'right' }}\n        />\n      </div>\n      <ReviewTable key={searchWord} reviewList={reviewListData} />\n    </div>\n  );\n}\n\nexport default ReviewListView;\n","import React from 'react';\nimport {Descriptions, Row, Col, Statistic} from 'antd';\n\nfunction ProductCard (props)\n{\n    const productData = props.productData;\n    console.log(props.productData);\n    return (\n        <>\n        <div style={{display: 'table', width: '100%'}}>\n            <div style={{display: 'table-row', verticalAlign: 'middle'}}>\n                <div style={{display: 'table-cell', textAlign: 'center', width: '200px'}}>\n                    {productData.thumbnailUrl?\n                    <img style={{\n                            //borderRadius: \"50%\",\n                            width: 150,\n                            height: 150,\n                        }} \n                        src={productData.thumbnailUrl}/>:\n                    <img style={{\n                            //borderRadius: \"50%\",\n                            width: 150,\n                            height: 150,\n                        }} />}\n                </div>\n                <div style={{display: 'table-cell', textAlign: 'center', width: 'auto'}}>\n                    <Row gutter={16}>\n                        <Col span={6}>\n                        <Statistic title=\"조회수\" value={productData.viewCount} />\n                        </Col>\n                        <Col span={6}>\n                        <Statistic title=\"RatingScore/Count\" value={productData.ratingScore + '/' + productData.ratingCount} />\n                        </Col>\n                        <Col span={6}>\n                        <Statistic title=\"리뷰수\" value={productData.commentCount} />\n                        </Col>\n                        <Col span={6}>\n                        <Statistic title=\"같은 제품 리뷰\" value={productData.relayedVideoCount} />\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n            </div>\n            <Descriptions bordered>\n                <Descriptions.Item label=\"ProductId\">{productData.productId}</Descriptions.Item>\n                <Descriptions.Item label=\"title\" span={2} >{productData.title}</Descriptions.Item>\n                <Descriptions.Item label=\"price\">{productData.price}</Descriptions.Item>\n                <Descriptions.Item label=\"할인가\">{productData.discountPrice}</Descriptions.Item>\n                <Descriptions.Item label=\"할인률\">{productData.discountRate*100}%</Descriptions.Item>\n                <Descriptions.Item label=\"createdAt\" >{productData.createdAt}</Descriptions.Item>\n                <Descriptions.Item label=\"updatedAt\" >{productData.updatedAt}</Descriptions.Item>\n                <Descriptions.Item label=\"vtype\">{productData.vtype}</Descriptions.Item>\n                <Descriptions.Item label=\"thumbnailUrl\" span={3}>{productData.thumbnailUrl}</Descriptions.Item>\n            </Descriptions>\n        </>\n    );\n}\n\nexport default ProductCard;\n\n/*\n{\n    \"ratingCountList\": {\n        \"0\": 0,\n        \"1\": 0,\n        \"2\": 0,\n        \"3\": 0,\n        \"4\": 0,\n        \"5\": 0\n    },\n    \"ratingScore\": 0,\n    \"commentCount\": 0,\n    \"linkedVideoCount\": 0,\n    \"thumbnailUrl\": \"https://resource.greyd.app/productImage/1630827191999_dbdc71f0ce29ae4cbda44c2de65b8b8d.jpg\",\n    \"discountPrice\": 44900,\n    \"discountRate\": 0.48,\n    \"vtype\": 0,\n    \"_id\": \"613472b9597e6958ea8a91d0\",\n    \"title\": \"리노베라 칼슘파우더 친환경 과일세정제 150g 3개 세트\",\n    \"price\": 87000,\n    \"createdAt\": \"2021-09-05T07:33:13.665Z\",\n    \"updatedAt\": \"2021-09-05T07:34:33.600Z\",\n    \"productId\": \"613472b9597e6958ea8a91d0\",\n    \"ratingCount\": 0,\n    \"id\": \"613472b9597e6958ea8a91d0\"\n},\n*/","import React, {useEffect, useState} from \"react\";\nimport 'antd/dist/antd.css';\nimport { Table } from 'antd';\n\nimport ProductCard from \"./ProductCard\";\nimport ItemDeleteButton from \"./ItemDeleteButton\";\n\nfunction onChange(pagination, filters, sorter, extra) {\n    console.log('params', pagination, filters, sorter, extra);\n}\n\nfunction ProductTable(props) {\n    const [productList, setProductList] = useState(props.productList);\n    useEffect(()=>{\n        setProductList(props.productList);\n    },[props.productList]);\n    const handleDeleteSuccess = record => {\n        console.log(\"record : \", record);\n        setProductList(productList.filter(function(item) {\n            return item !== record;\n        }));\n    }\n    const columns = [\n        {\n            title: '제품',\n            dataIndex: 'title',\n            width: '250px',\n            ellipsis: true\n        },\n        {\n            title: '리뷰수',\n            dataIndex: 'linkedVideoCount',\n            sorter: {\n                compare: (a, b) => a.linkedVideoCount - b.linkedVideoCount,\n                multiple: 7,\n            },\n        },\n        {\n            title: '댓글수',\n            dataIndex: 'commentCount',\n            sorter: {\n                compare: (a, b) => a.commentCount - b.commentCount,\n                multiple: 6,\n            },\n        },\n        {\n            title: '레이팅점수',\n            dataIndex: 'ratingScore',\n            sorter: {\n                compare: (a, b) => a.ratingScore - b.ratingScore,\n                multiple: 5,\n            },\n        },\n        {\n            title: '레이팅횟수',\n            dataIndex: 'ratingCount',\n            sorter: {\n                compare: (a, b) => a.ratingCount - b.ratingCount,\n                multiple: 4,\n            },\n        },\n        {\n            title: '정가',\n            dataIndex: 'price',\n            sorter: {\n                compare: (a, b) => a.price - b.price,\n                multiple: 3,\n            },\n        },\n        {\n            title: '할인률',\n            dataIndex: 'discountRate',\n            sorter: {\n                compare: (a, b) => a.discountRate - b.discountRate,\n                multiple: 2,\n            },\n        },\n        {\n            title: '최근등록',\n            dataIndex: 'updatedAt',\n            width: '200px',\n            sorter: {\n                compare: (a, b) => a.updatedAt - b.updatedAt,\n                multiple: 1,\n            },\n        },\n        {\n            title: '관리',\n            dataIndex: '',\n            key: 'x',\n            render: record => <ItemDeleteButton type='product' record={record} onSuccess={handleDeleteSuccess}/>,\n        },\n    ];\n\n    console.log(\"productList : \", productList);\n    return (\n        <Table\n            columns={columns}\n            dataSource={productList}\n            rowKey={record => { return record.productId }}\n            expandable={{\n                expandedRowRender: record => <ProductCard productData={record} />,\n                rowExpandable: record => true,\n            }}\n            onChange={onChange}\n        />\n    )\n}\n\nexport default ProductTable;\n","import React, { useState, useEffect } from 'react';\nimport ProductTable from \"../molecules/ProductTable\";\nimport AdminRepository from \"../repositories/AdminRepository\";\n\nimport { Input, Select, Radio  } from 'antd';\n\n\n// TODO: 제품 리스트 조회 API 로직 보완, 20개 이상의 리스트가 보여지도록\n// TODO: Style 정리, 문자열 constant 정리\n\nfunction ProductListView () {\n    const [productListData, setProductListData] = useState([]);\n    const [searchType, setSearchType] = useState('keyword');\n    const [category, setCategory] = useState('all');\n    const { Search } = Input;\n    const { Option } = Select;\n\n    const handleRadioChange = (e) => {\n        setSearchType(e.target.value);\n    }\n    const handleSelectChange = async (value) => {\n        setCategory(value);\n\n        let params = {};\n        if(value!=='all') params['categoryCode'] = value;\n\n        // TODO : 추가적으로 item을 부르도록 수정해야 함.\n        // 임시 코드\n        params['limit'] = 3000;\n\n        const result = await AdminRepository.getProductList(params);\n        setProductListData(result.data);\n    }\n    const handleSearch = async (value) => {\n        let params = {};\n        if(category!=='all') params['categoryCode'] = category;\n        if(value!=='')\n        {\n            if(searchType==='keyword') params['searchKeyword'] = value;\n            else if(searchType==='sellerId') params['filterAuthorId'] = value;\n        }\n\n        // TODO : 추가적으로 item을 부르도록 수정해야 함.\n        // 임시 코드\n        params['limit'] = 3000;\n\n        const result = await AdminRepository.getProductList(params);\n        setProductListData(result.data);\n    }\n\n    async function updateProductList(params) {\n        const result = await AdminRepository.getProductList(params);\n        setProductListData(result.data);\n      }\n\n    useEffect(()=>{\n        const params = {'limit': 3000};\n        updateProductList(params);\n    },[]);\n\n    return (\n        <div>\n            <div>\n            <Search placeholder=\"input search text\" allowClear onSearch={handleSearch} style={{ width: '40%', float: 'left' }} />\n            <Radio.Group onChange={handleRadioChange} value={searchType} style={{float: 'left', margin: '0px 10px'}}>\n                <Radio value={'keyword'}>keyword</Radio>\n                <Radio value={'sellerId'}>sellerId</Radio>\n            </Radio.Group>\n            <Select defaultValue={category} style={{ width: '15%', float: 'right' }} onChange={handleSelectChange}>\n                <Option value=\"all\">all</Option>\n                <Option value=\"fashion\">fashion</Option>\n                <Option value=\"food\">food</Option>\n                <Option value=\"beauty\">beauty</Option>\n                <Option value=\"living\">living</Option>\n                <Option value=\"health\">health</Option>\n                <Option value=\"child\">child</Option>\n                <Option value=\"interior\">interior</Option>\n                <Option value=\"digital\">digital</Option>\n                <Option value=\"sports\">sports</Option>\n                <Option value=\"animal\">animal</Option>\n                <Option value=\"hobby\">hobby</Option>\n                <Option value=\"others\">others</Option>\n            </Select>\n            </div>\n            <ProductTable productList={productListData}/>\n        </div>\n    )\n}\n\nexport default ProductListView;\n","import React from 'react';\nimport {Descriptions} from 'antd';\n\nfunction OrderCard (props)\n{\n    const orderData = props.orderData;\n    // const optionList = orderData.options.lists.map(info => {\n    //     return <div>{info.name} : {info.selectedItemName}</div>\n    // });\n    console.log(props.orderData);\n    // console.log(optionList);\n\n    return (\n        <>\n            <Descriptions bordered>\n                <Descriptions.Item label=\"OrderId\">{orderData.orderId}</Descriptions.Item>\n                <Descriptions.Item label=\"title\" span={2} >{`${orderData.cartItems[0]?.product.title} ${orderData.cartItems.length-1 > 0 ?`외 ${orderData.cartItems.length-1}`: ''}`}</Descriptions.Item>\n                <Descriptions.Item label=\"결제가\">{orderData.totalPrice}</Descriptions.Item>\n                <Descriptions.Item label=\"배송비\">{orderData.shipmentCost}</Descriptions.Item>\n                <Descriptions.Item label=\"주문개수\">{orderData.number}</Descriptions.Item>\n                <Descriptions.Item label=\"주문상태\">{orderData.statusCode}</Descriptions.Item>\n                <Descriptions.Item label=\"주소\" span={2}>{orderData.address}</Descriptions.Item>\n                <Descriptions.Item label=\"주문자\">{orderData.buyerName}({orderData.buyer.name})</Descriptions.Item>\n                <Descriptions.Item label=\"주문자 번호\" span={2}>{orderData.buyerPhone}</Descriptions.Item>\n                <Descriptions.Item label=\"주문자 이메일\" span={3}>{orderData.buyerEmail}</Descriptions.Item>\n                <Descriptions.Item label=\"받는분\">{orderData.receiverName}</Descriptions.Item>\n                <Descriptions.Item label=\"받는분 번호\" span={2}>{orderData.receiverPhone}</Descriptions.Item>\n                <Descriptions.Item label=\"createdAt\" >{orderData.createdAt}</Descriptions.Item>\n                <Descriptions.Item label=\"updatedAt\" >{orderData.updatedAt}</Descriptions.Item>\n                <Descriptions.Item label=\"vtype\">{`${orderData.vtype}`}</Descriptions.Item>\n                {/*<Descriptions.Item label=\"옵션\" span={3}>{optionList}</Descriptions.Item>*/}\n                <Descriptions.Item label=\"memo\" span={3}>{orderData.memo}</Descriptions.Item>\n                <Descriptions.Item label=\"actionMemoBuyer\" span={3}>{orderData.actionMemoBuyer}</Descriptions.Item>\n                <Descriptions.Item label=\"actionMemoSeller\" span={3}>{orderData.actionMemoSeller}</Descriptions.Item>\n\n            </Descriptions>\n        </>\n    );\n}\n\nexport default OrderCard;\n\n/*\n    {\n        \"options\": {\n            \"checks\": [],\n            \"lists\": [\n                {\n                    \"name\": \"맛 선택\",\n                    \"selectedItemName\": \"순한맛\",\n                    \"addition\": 0,\n                    \"_id\": \"613461e8597e6958ea8a9189\",\n                    \"id\": \"613461e8597e6958ea8a9189\"\n                }\n            ]\n        },\n        \"statusCode\": 0,\n        \"number\": 1,\n        \"shipmentCost\": 5000,\n        \"priceToPay\": 10000,\n        \"address\": \"달맞이로35\",\n        \"buyerName\": \"정광희\",\n        \"buyerEmail\": \"\",\n        \"buyerPhone\": \"01077731104\",\n        \"receiverName\": \"정광희 \",\n        \"receiverPhone\": \"01077731104\",\n        \"memo\": \"\",\n        \"actionMemoBuyer\": \"\",\n        \"actionMemoSeller\": \"\",\n        \"_id\": \"613461e8597e6958ea8a9188\",\n        \"product\": {\n            \"thumbnailUrl\": \"https://storage.googleapis.com/greyd/productImage/1609302655596_56974f2adc295e6a30d43ded675fd224.jpg\",\n            \"_id\": \"5fec028182b8b333eb54a156\",\n            \"title\": \"BBQ 비비큐 순살바삭치킨 200g\",\n            \"productId\": \"5fec028182b8b333eb54a156\",\n            \"ratingCount\": 0,\n            \"id\": \"5fec028182b8b333eb54a156\"\n        },\n        \"buyer\": {\n            \"profilePicUrl\": \"https://resource.greyd.app/userProfilePic/1630414635729_f1f4c97b41c30a82fca39aca63e8cd7d.JPEG\",\n            \"class\": 0,\n            \"_id\": \"610cfc8d7c30992bb5d10950\",\n            \"name\": \"Jactor\",\n            \"userId\": \"610cfc8d7c30992bb5d10950\",\n            \"ratingCount\": 0,\n            \"id\": \"610cfc8d7c30992bb5d10950\"\n        },\n        \"seller\": {\n            \"profilePicUrl\": \"https://resource.greyd.app/userProfilePic/1629194382185_808e973783355558209f460cbb2e7bbd.jpg\",\n            \"class\": 0,\n            \"_id\": \"5fe95b6bed8c2083033e8e21\",\n            \"name\": \"Renov\",\n            \"userId\": \"5fe95b6bed8c2083033e8e21\",\n            \"ratingCount\": 0,\n            \"id\": \"5fe95b6bed8c2083033e8e21\"\n        },\n        \"createdAt\": \"2021-09-05T06:21:28.764Z\",\n        \"updatedAt\": \"2021-09-05T06:21:50.420Z\",\n        \"__v\": 0,\n        \"orderId\": \"613461e8597e6958ea8a9188\",\n        \"id\": \"613461e8597e6958ea8a9188\"\n    },\n    */","import React, {useEffect, useState} from \"react\";\nimport 'antd/dist/antd.css';\nimport { Table } from 'antd';\n\nimport OrderCard from \"./OrderCard\";\nimport ItemDeleteButton from \"./ItemDeleteButton\";\n\n\nconst orderStatus = new Map([\n[0, '결제 대기중 (장바구니)'],\n[1, '결제 완료 및 미접수'],\n[2, '접수 완료 및 발송 준비중'],\n[3, '발송중'],\n[4, '배송완료'],\n[5, '구매완료'],\n[6, '결제 취소'],\n[7, '판매 거절'],\n[8, '구매 취소'],\n[20, '배송되기 전'],\n[21, '결제 이후의 주문 내역'],\n]);\n\nfunction onChange(pagination, filters, sorter, extra) {\n    console.log('params', pagination, filters, sorter, extra);\n}\n\nfunction OrderTable(props) {\n    const [orderList, setOrderList] = useState(props.orderList);\n    useEffect(()=>{\n        console.log(props.orderList);\n        setOrderList(props.orderList);\n    },[props.orderList]);\n    const handleDeleteSuccess = record => {\n        console.log(\"record : \", record);\n        setOrderList(orderList.filter(function(item) {\n            return item !== record;\n        }));\n    }\n    const columns = [\n        {\n            title: '주문일시',\n            dataIndex: 'createdAt',\n            width: '170px',\n            ellipsis: true,\n            sorter: {\n                compare: (a, b) => a.createdAt - b.createdAt,\n                multiple: 1,\n            },\n        },\n        {\n            title: '주문번호',\n            width: '100px',\n            ellipsis: true,\n            dataIndex: 'id',\n        },\n        {\n            title: '주문상품',\n            width: '210px',\n            ellipsis: true,\n            render: record=><span>{`${record.cartItems[0]?.product.title} ${record.cartItems.length-1 > 0 ?`외 ${record.cartItems.length-1}`: ''}`}</span>,\n        },\n        {\n            title: '주문자',\n            render: record=><span>{record.buyer.name}</span>,\n            ellipsis: true,\n        },\n        {\n            title: '받는분',\n            dataIndex: 'receiverName',\n            ellipsis: true,\n        },\n        {\n            title: '결제',\n            dataIndex: 'totalPrice',\n        },\n        {\n            title: '배송비',\n            dataIndex: 'shipmentCost',\n        },\n        {\n            // TODO: status 대응 문자열로 변경 필요.\n            title: '주문상태',\n            render: record=><span>{orderStatus.get(record.statusCode)}</span>,\n            //dataIndex: 'statusCode',\n            width: '170px',\n            ellipsis: true,\n        },\n        {\n            title: '관리',\n            dataIndex: '',\n            key: 'x',\n            render: record => <ItemDeleteButton type='order' record={record} onSuccess={handleDeleteSuccess}/>,\n        },\n    ];\n\n    console.log(\"orderList : \", orderList);\n    return (\n        <Table\n            columns={columns}\n            dataSource={orderList}\n            rowKey={record => { return record.orderId }}\n            expandable={{\n                expandedRowRender: record => <OrderCard orderData={record} />,\n                rowExpandable: record => true,\n            }}\n            onChange={onChange}\n        />\n    )\n}\n\nexport default OrderTable;\n","import React from 'react';\nimport {Button} from 'antd';\nimport * as ExcelJS from \"exceljs\";\nimport { saveAs } from \"file-saver\";\n\nconst orderStatus = new Map([\n    [0, '결제 대기중'],\n    [1, '결제 완료'],\n    [2, '발송 준비중'],\n    [3, '배송중'],\n    [4, '배송완료'],\n    [5, '구매완료'],\n    [6, '결제 취소'],\n    [7, '판매 거절'],\n    [8, '구매 취소'],\n    [20, '배송되기 전'],\n    [21, '결제 이후의 주문 내역'],\n    ]);\n\nconst columns = [\n    {\n        header: '주문일시',\n        key: 'createdAt',\n        width: 27\n    },\n    {\n        header: '주문번호',\n        key: 'id',\n        width: 28\n    },\n    {\n        header: '주문상품',\n        key: 'productTitle',\n        width: 76\n        //render: record=><span>{record.product.title}</span>,\n    },\n    {\n        header: '주문자',\n        key: 'buyerName',\n        width: 13\n        //render: record=><span>{record.buyer.name}</span>,\n    },\n    {\n        header: '받는분',\n        key: 'receiverName',\n        width: 13\n    },\n    {\n        header: '결제',\n        key: 'totalPrice',\n        width: 9\n    },\n    {\n        header: '배송비',\n        key: 'shipmentCost',\n        width: 9\n    },\n    {\n        header: '주문상태',\n        key: 'orderStatus',\n        width: 20\n        //render: record=><span>{orderStatus.get(record.statusCode)}</span>,\n    },\n];\n\nfunction OrderDownloadButton (props) {\n    const handleDownloadSheet = async () => {\n        //productListData\n        const workbook = new ExcelJS.Workbook();\n        const worksheet = workbook.addWorksheet(\"주문 목록\"); // sheet 이름이 My Sheet // sheet 데이터 설정\n        worksheet.columns = columns;\n        props.orderList.map( (record, index) => {\n                const result = worksheet.addRow({\n                    createdAt: record.createdAt.replace(\"T\",\" \").replace(\"Z\",\"\"),\n                    id: record.id,\n                    productTitle: `${record.cartItems[0]?.product.title} ${record.cartItems.length-1 > 0 ?`외 ${record.cartItems.length-1}`: ''}`,\n                    buyerName: record.buyer.name,\n                    receiverName: record.receiverName,\n                    totalPrice: record.totalPrice,\n                    shipmentCost: record.shipmentCost,\n                    orderStatus: orderStatus.get(record.statusCode),\n                    });\n            return result;\n        });\n\n        const mimeType = { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" };\n        const buffer = await workbook.xlsx.writeBuffer();\n        const blob = new Blob([buffer], mimeType);\n\n        const today = new Date();\n        const year = today.getFullYear();\n        const month = ('0' + (today.getMonth() + 1)).slice(-2);\n        const day = ('0' + today.getDate()).slice(-2);\n\n        const dateString = year + month + day;\n        saveAs(blob, `주문목록-${dateString}.xlsx`);\n    }\n    return (<Button onClick={handleDownloadSheet}>다운로드</Button>);\n}\n\nexport default OrderDownloadButton;\n","import React, { useState, useEffect } from 'react';\nimport OrderTable from \"../molecules/OrderTable\";\nimport OrderDownloadButton from '../molecules/OrderDownloadButton';\nimport AdminRepository from \"../repositories/AdminRepository\";\n\nimport { Input, Select, Radio  } from 'antd';\n\n// TODO: 주문 리스트 조회 API 로직 보완, 20개 이상의 리스트가 보여지도록\n// TODO: Style 정리, 문자열 constant 정리\n\nfunction OrderListView () {\n    const [orderListData, setOrderListData] = useState([]);\n    const [searchType, setSearchType] = useState('');\n    const [orderStatus, setOrderStatus] = useState(-1);\n    const { Search } = Input;\n    const { Option } = Select;\n\n    const handleRadioChange = (e) => {\n        setSearchType(e.target.value);\n    }\n    const handleOrderStatusSelectChange = async (value) => {\n        setOrderStatus(value);\n        let params = {};\n        if(value!==-1) params['statusCode'] = value;\n\n        // TODO : 추가적으로 item을 부르도록 수정해야 함.\n        // 임시 코드\n        params['limit'] = 3000;\n\n        const result = await AdminRepository.getOrderList(params);\n        setOrderListData(result.data);\n        \n    }\n    const handleSearch = async (value) => {\n        // 셀러 기반, 바이어 기반, 제품 기반, 카테고리 기반, 주문 상태 기반\n        let params = {};\n        if(orderStatus!==-1) params['statusCode'] = orderStatus;\n        if(value!=='')\n        {\n            if(searchType==='sellerId') params['sellerId'] = value;\n            else if(searchType==='buyerId') params['buyerId'] = value;\n            else if(searchType==='productId') params['productId'] = value;\n        }\n\n        // TODO : 추가적으로 item을 부르도록 수정해야 함.\n        // 임시 코드\n        params['limit'] = 3000;\n\n        const result = await AdminRepository.getOrderList(params);\n        setOrderListData(result.data);\n    }\n\n\n    async function updateOrderList(params) {\n        const result = await AdminRepository.getOrderList(params);\n        setOrderListData(result.data);\n    }\n\n    useEffect(()=>{\n        const params = {'limit': 3000};\n        updateOrderList(params);\n    },[]);\n\n    return (\n        <div>\n            <div>\n            <Search placeholder=\"input search text\" allowClear onSearch={handleSearch} style={{ width: '40%', float: 'left' }} />\n            <Radio.Group onChange={handleRadioChange} value={searchType} style={{float: 'left', margin: '0px 10px'}}>\n                <Radio value={'sellerId'}>sellerId</Radio>\n                <Radio value={'buyerId'}>buyerId</Radio>\n                <Radio value={'productId'}>productId</Radio>\n            </Radio.Group>\n            <Select defaultValue={orderStatus} style={{ width: '15%', float: 'right' }} onChange={handleOrderStatusSelectChange}>\n                <Option value={-1}>모두</Option>\n                <Option value={0}>결제 대기중 (장바구니)</Option>\n                <Option value={1}>결제 완료 및 미접수</Option>\n                <Option value={2}>접수 완료 및 발송 준비중</Option>\n                <Option value={3}>발송중</Option>\n                <Option value={4}>배송완료</Option>\n                <Option value={5}>구매완료</Option>\n                <Option value={6}>결제 취소</Option>\n                <Option value={7}>판매 거절</Option>\n                <Option value={8}>구매 취소</Option>\n                <Option value={20}>배송되기 전</Option>\n                <Option value={21}>결제 이후의 주문 내역</Option>\n            </Select>\n            <OrderDownloadButton orderList={orderListData} style={{ width: '15%', float: 'right' }}/>\n            </div>\n            <OrderTable orderList={orderListData}/>\n        </div>\n    )\n}\n\nexport default OrderListView;\n","import React from 'react';\nimport {Descriptions} from 'antd';\n\nfunction RevenueCard (props)\n{\n    const revenueData = props.revenueData;\n    console.log(props.revenueData);\n    return (\n        <>\n            <Descriptions bordered>\n                <Descriptions.Item label=\"RevenueId\">{revenueData._id}</Descriptions.Item>\n                <Descriptions.Item label=\"title\" span={2} >{`${revenueData.order.cartItems[0]?.product.title} ${revenueData.order.cartItems.length-1 > 0 ?`외 ${revenueData.order.cartItems.length-1}`: ''}`}</Descriptions.Item>\n                <Descriptions.Item label=\"기여도\">{revenueData.contributionRate}</Descriptions.Item>\n                <Descriptions.Item label=\"매출\">{revenueData.revenueAmount}</Descriptions.Item>\n                <Descriptions.Item label=\"수익\">{revenueData.profitAmount}</Descriptions.Item>\n                <Descriptions.Item label=\"userId\">{revenueData.user.id}</Descriptions.Item>\n                <Descriptions.Item label=\"orderId\">{revenueData.order.id}</Descriptions.Item>\n                <Descriptions.Item label=\"reviewId\">{revenueData.video?.id}</Descriptions.Item>\n                <Descriptions.Item label=\"createdAt\" >{revenueData.createdAt}</Descriptions.Item>\n                <Descriptions.Item label=\"updatedAt\" >{revenueData.updatedAt}</Descriptions.Item>\n                <Descriptions.Item label=\"구매확정\">{revenueData.order.purchaseCompletedAt}</Descriptions.Item>\n                <Descriptions.Item label=\"isSeller\">{`${revenueData.isSeller}`}</Descriptions.Item>\n                <Descriptions.Item label=\"isValid\">{`${revenueData.isValid}`}</Descriptions.Item>\n            </Descriptions>\n        </>\n    );\n}\n\nexport default RevenueCard;\n\n/*\n    {\n        \"contributionRate\": 100,\n        \"isSeller\": true,\n        \"isValid\": true,\n        \"_id\": \"60e7d9b62d02c605ef02deba\",\n        \"user\": {\n            \"_id\": \"5fe95b6bed8c2083033e8e21\",\n            \"name\": \"Renov\",\n            \"userId\": \"5fe95b6bed8c2083033e8e21\",\n            \"ratingCount\": 0,\n            \"id\": \"5fe95b6bed8c2083033e8e21\"\n        },\n        \"order\": {\n            \"options\": {\n                \"checks\": [],\n                \"lists\": [\n                    {\n                        \"name\": \"맛 선택\",\n                        \"selectedItemName\": \"순한맛\",\n                        \"addition\": 0,\n                        \"_id\": \"60e7d2832d02c605ef02deb5\"\n                    }\n                ]\n            },\n            \"number\": 1,\n            \"_id\": \"60e7d2832d02c605ef02deb4\",\n            \"buyer\": {\n                \"_id\": \"5fe99916b407304c60a6ef9d\",\n                \"name\": \"Changhee\",\n                \"userId\": \"5fe99916b407304c60a6ef9d\",\n                \"ratingCount\": 0,\n                \"id\": \"5fe99916b407304c60a6ef9d\"\n            },\n            \"purchaseCompletedAt\": \"2021-07-10T01:43:00.949Z\",\n            \"orderId\": \"60e7d2832d02c605ef02deb4\",\n            \"id\": \"60e7d2832d02c605ef02deb4\"\n        },\n        \"revenueAmount\": 0,\n        \"profitAmount\": 5270,\n        \"product\": {\n            \"thumbnailUrl\": \"https://storage.googleapis.com/greyd/productImage/1609302655596_56974f2adc295e6a30d43ded675fd224.jpg\",\n            \"_id\": \"5fec028182b8b333eb54a156\",\n            \"title\": \"BBQ 비비큐 순살바삭치킨 200g\",\n            \"productId\": \"5fec028182b8b333eb54a156\",\n            \"ratingCount\": 0,\n            \"id\": \"5fec028182b8b333eb54a156\"\n        },\n        \"createdAt\": \"2021-07-09T05:08:06.216Z\",\n        \"updatedAt\": \"2021-07-10T01:43:01.144Z\",\n        \"__v\": 0\n    },\n    {\n        \"contributionRate\": 0.33,\n        \"isSeller\": false,\n        \"isValid\": true,\n        \"_id\": \"60e7d9b62d02c605ef02deb8\",\n        \"user\": {\n            \"_id\": \"5fe95b6bed8c2083033e8e21\",\n            \"name\": \"Renov\",\n            \"userId\": \"5fe95b6bed8c2083033e8e21\",\n            \"ratingCount\": 0,\n            \"id\": \"5fe95b6bed8c2083033e8e21\"\n        },\n        \"order\": {\n            \"options\": {\n                \"checks\": [],\n                \"lists\": [\n                    {\n                        \"name\": \"맛 선택\",\n                        \"selectedItemName\": \"순한맛\",\n                        \"addition\": 0,\n                        \"_id\": \"60e7d2832d02c605ef02deb5\"\n                    }\n                ]\n            },\n            \"number\": 1,\n            \"_id\": \"60e7d2832d02c605ef02deb4\",\n            \"buyer\": {\n                \"_id\": \"5fe99916b407304c60a6ef9d\",\n                \"name\": \"Changhee\",\n                \"userId\": \"5fe99916b407304c60a6ef9d\",\n                \"ratingCount\": 0,\n                \"id\": \"5fe99916b407304c60a6ef9d\"\n            },\n            \"purchaseCompletedAt\": \"2021-07-10T01:43:00.949Z\",\n            \"orderId\": \"60e7d2832d02c605ef02deb4\",\n            \"id\": \"60e7d2832d02c605ef02deb4\"\n        },\n        \"revenueAmount\": 6200,\n        \"profitAmount\": 102.3,\n        \"video\": {\n            \"title\": \"맛있는 간편조리 BBQ 순살바삭 치킨 리뷰들어갑니다~\",\n            \"_id\": \"5fec63a082b8b333eb54a189\",\n            \"thumbnailUrl\": \"https://storage.googleapis.com/greyd/videoThumbnail/1609327517605_2a21272f50b900677e64fa3a6b436b46.jpg\",\n            \"videoId\": \"5fec63a082b8b333eb54a189\",\n            \"ratingCount\": 0,\n            \"id\": \"5fec63a082b8b333eb54a189\"\n        },\n        \"product\": {\n            \"thumbnailUrl\": \"https://storage.googleapis.com/greyd/productImage/1609302655596_56974f2adc295e6a30d43ded675fd224.jpg\",\n            \"_id\": \"5fec028182b8b333eb54a156\",\n            \"title\": \"BBQ 비비큐 순살바삭치킨 200g\",\n            \"productId\": \"5fec028182b8b333eb54a156\",\n            \"ratingCount\": 0,\n            \"id\": \"5fec028182b8b333eb54a156\"\n        },\n        \"createdAt\": \"2021-07-09T05:08:06.216Z\",\n        \"updatedAt\": \"2021-07-10T01:43:01.144Z\",\n        \"__v\": 0\n    },\n    */","import React, {useEffect, useState} from \"react\";\nimport 'antd/dist/antd.css';\nimport { Table } from 'antd';\n\nimport RevenueCard from \"./RevenueCard\";\n\nfunction onChange(pagination, filters, sorter, extra) {\n    console.log('params', pagination, filters, sorter, extra);\n}\n\nfunction RevenueTable(props) {\n    const [revenueList, setRevenueList] = useState(props.revenueList);\n    useEffect(()=>{\n        setRevenueList(props.revenueList);\n    },[props.revenueList]);\n    const columns = [\n        {\n            title: 'Product',\n            dataIndex: '',\n            render: record=><span>{`${record.order.cartItems[0]?.product.title} ${record.order.cartItems.length-1 > 0 ?`외 ${record.order.cartItems.length-1}`: ''}`}</span>,\n            width: '200px',\n            ellipsis: true,\n        },\n        {\n            title: 'Seller Id',\n            dataIndex: '',\n            width: '120px',\n            ellipsis: true,\n            render: record=><span>{record.user.id}</span>,\n        },\n        {\n            title: 'Order Id',\n            dataIndex: '',\n            width: '120px',\n            ellipsis: true,\n            render: record=><span>{record.order.id}</span>,\n        },\n        {\n            title: '결재',\n            width: '80px',\n            render: record=><span>{record.order.totalPrice}</span>,\n        },\n        {\n            title: '배송비',\n            width: '80px',\n            render: record=><span>{record.order.shipmentCost}</span>,\n        },\n        {\n            title: '수익',\n            width: '80px',\n            dataIndex: 'profitAmount',\n        },\n        {\n            title: '판매확정',\n            width: '170px',\n            ellipsis: true,\n            render: record=><span>{record.order.purchaseCompletedAt?record.order.purchaseCompletedAt:'미확정'}</span>,\n        },\n        {\n            title: '주문자',\n            width: '80px',\n            ellipsis: true,\n            render: record=><span>{record.order.buyerName}</span>,\n        },\n        {\n            title: '구매수',\n            width: '80px',\n            render: record=><span>{record.order.number}</span>,\n        },\n        {\n            title: '주문날짜',\n            dataIndex: '',\n            width: '170px',\n            ellipsis: true,\n            render: record=><span>{record.order.paidAt}</span>,\n        },\n    ];\n\n    console.log(\"revenueList : \", revenueList);\n    return (\n        <Table\n            columns={columns}\n            dataSource={revenueList}\n            rowKey={record => { return record._id }}\n            expandable={{\n                expandedRowRender: record => <RevenueCard revenueData={record} />,\n                rowExpandable: record => true,\n            }}\n            onChange={onChange}\n        />\n    )\n}\n\nexport default RevenueTable;\n","import React from 'react';\nimport {Button} from 'antd';\nimport * as ExcelJS from \"exceljs\";\nimport { saveAs } from \"file-saver\";\n\nconst orderStatus = new Map([\n    [0, '결제 대기중'],\n    [1, '결제 완료'],\n    [2, '발송 준비중'],\n    [3, '배송중'],\n    [4, '배송완료'],\n    [5, '구매완료'],\n    [6, '결제 취소'],\n    [7, '판매 거절'],\n    [8, '구매 취소'],\n    [20, '배송되기 전'],\n    [21, '결제 이후의 주문 내역'],\n    ]);\n\nconst columns = [\n    {\n        header: '주문상품',\n        key: 'productTitle',\n        width: 70\n    },\n    {\n        header: '판매자',\n        key: 'seller',\n        width: 18\n    },\n    {\n        header: '구매수',\n        key: 'number',\n        width: 9\n    },\n    {\n        header: '결제',\n        key: 'totalPrice',\n        width: 9\n    },\n    {\n        header: '수익',\n        key: 'profitAmount',\n        width: 9\n    },\n    {\n        header: '주문상태',\n        key: 'orderStatus',\n        width: 15\n        //render: record=><span>{record.buyer.name}</span>,\n    },\n    {\n        header: '배송완료',\n        key: 'shipmentCompletedAt',\n        width: 23\n    },\n    {\n        header: '구매확정',\n        key: 'purchaseCompletedAt',\n        width: 23\n    },\n    {\n        header: '주문자',\n        key: 'buyerName',\n        width: 13\n        //render: record=><span>{record.buyer.name}</span>,\n    },\n    {\n        header: '주문번호',\n        key: 'orderId',\n        width: 28\n    },\n    {\n        header: '주문일시',\n        key: 'paidAt',\n        width: 23\n    },\n];\n\nfunction RevenueDownloadButton (props) {\n    const handleDownloadSheet = async () => {\n        //productListData\n        const workbook = new ExcelJS.Workbook();\n        const worksheet = workbook.addWorksheet(\"매출내역\"); // sheet 이름이 My Sheet // sheet 데이터 설정\n        worksheet.columns = columns;\n        props.revenueList.map( (record, index) => {\n                const result = worksheet.addRow({\n                    productTitle: `${record.order.cartItems[0]?.product.title} ${record.order.cartItems.length-1 > 0 ?`외 ${record.order.cartItems.length-1}`: ''}`,\n                    seller: record.user.name,\n                    orderId: record.order.id,\n                    totalPrice: record.order.totalPrice,\n                    profitAmount: record.profitAmount,\n                    purchaseCompletedAt: record.order.purchaseCompletedAt?.replace(\"T\",\" \").replace(\"Z\",\"\"),\n                    shipmentCompletedAt: record.order.shipmentCompletedAt?.replace(\"T\",\" \").replace(\"Z\",\"\"),\n                    buyerName: record.order.buyerName,\n                    number: record.order.number,\n                    paidAt: record.order.paidAt.replace(\"T\",\" \").replace(\"Z\",\"\"),\n                    orderStatus: orderStatus.get(record.order.statusCode),\n                    });\n            return result;\n        });\n\n        const mimeType = { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" };\n        const buffer = await workbook.xlsx.writeBuffer();\n        const blob = new Blob([buffer], mimeType);\n\n        const today = new Date();\n        const year = today.getFullYear();\n        const month = ('0' + (today.getMonth() + 1)).slice(-2);\n        const day = ('0' + today.getDate()).slice(-2);\n\n        const dateString = year + month + day;\n        saveAs(blob, `매출내역-${dateString}.xlsx`);\n    }\n    return (<Button onClick={handleDownloadSheet}>다운로드</Button>);\n}\n\nexport default RevenueDownloadButton;\n","import React, { useState, useEffect } from 'react';\nimport RevenueTable from \"../molecules/RevenueTable\";\nimport AdminRepository from \"../repositories/AdminRepository\";\nimport RevenueDownloadButton from '../molecules/RevenueDownloadButton';\n\nimport { Input, Radio, Select  } from 'antd';\n\n// TODO: 매출 리스트 조회 API 로직 보완, 20개 이상의 리스트가 보여지도록\n// TODO: 매출 전체 리스트를 받아올 수 있도록 개선되면, api에 맞춰 수정할 것\n// TODO: product, review, order id에 따른 검색 기능 추가할 것\n// TODO: product, review, order 개별 요소를 모달로 간단히 확인할 수 있도록 기능 추가(옵션)\n// TODO: isSeller를 props로 받아서 해당 파라미터에 따라 리뷰리워드조회, 매출조회 선택가능하도록 수정할 것\n// TODO: Style 정리, 문자열 constant 정리\n\nfunction RevenueListView () {\n    const [revenueListData, setRevenueListData] = useState([]);\n    const [searchType, setSearchType] = useState('userId');\n    const [isValid, setValid] = useState(true);\n    const { Search } = Input;\n    const { Option } = Select;\n\n    const handleRadioChange = (e) => {\n        setSearchType(e.target.value);\n    }\n    const handleValidSelectChange = async (value) => {\n        setValid(value);\n        let params = {};\n        // TODO : 추가적으로 item을 부르도록 수정해야 함.\n        // 임시 코드\n        params['limit'] = 3000;\n        params['isValid'] = value;\n        params['isSeller'] = true;\n        const resultRevenue = await AdminRepository.getRevenueList(params);\n        const resultOrder = await AdminRepository.getOrderList(params);\n        const data = resultRevenue.data;\n        data.map(revenueItem => {\n            const result = revenueItem;\n            const orders = resultOrder.data.filter(orderItem=>orderItem._id===revenueItem.order?._id);\n            result.order = orders[0];\n            return result;\n        })\n        setRevenueListData(data);\n    }\n    const handleSearch = async (value) => {\n        let params = {};\n        if(value!=='')\n        {\n            if(searchType==='userId') params['userId'] = value;\n            // 현재 아래 구현 X\n            //else if(searchType==='productId') params['productId'] = value;\n            //else if(searchType==='reviewId') params['videoId'] = value;\n            //else if(searchType==='orderId') params['orderId'] = value;\n        }\n\n        // TODO : 추가적으로 item을 부르도록 수정해야 함.\n        // 임시 코드\n        params['limit'] = 3000;\n        params['isValid'] = isValid;\n        params['isSeller'] = true;\n        const resultRevenue = await AdminRepository.getRevenueList(params);\n        const resultOrder = await AdminRepository.getOrderList(params);\n        const data = resultRevenue.data;\n        data.map(revenueItem => {\n            const result = revenueItem;\n            const orders = resultOrder.data.filter(orderItem=>orderItem._id===revenueItem.order?._id);\n            result.order = orders[0];\n            return result;\n        })\n        setRevenueListData(data);\n    }\n\n    async function updateRevenueList(params) {\n        const resultRevenue = await AdminRepository.getRevenueList(params);\n        const resultOrder = await AdminRepository.getOrderList(params);\n        const data = resultRevenue.data;\n        data.map(revenueItem => {\n            const result = revenueItem;\n            const orders = resultOrder.data.filter(orderItem=>orderItem._id===revenueItem.order?._id);\n            result.order = orders[0];\n            return resultRevenue;\n        })\n        //shipmentCompletedAt로 필터링 필요\n        setRevenueListData(data);\n    }\n\n    useEffect(()=>{\n        const params = {'limit': 3000, 'isValid': isValid, 'isSeller': true};\n        updateRevenueList(params);\n    },[]);\n\n    return (\n        <div>\n            <div>\n            <Search placeholder=\"input search text\" allowClear onSearch={handleSearch} style={{ width: '40%', float: 'left' }} />\n            <Radio.Group onChange={handleRadioChange} value={searchType} style={{float: 'left', margin: '0px 10px'}}>\n                <Radio value={'userId'}>contributorId</Radio>\n                <Radio disabled={true} value={'productId'}>productId</Radio>\n                <Radio disabled={true} value={'reviewId'}>reviewId</Radio>\n                <Radio disabled={true} value={'orderId'}>orderId</Radio>\n            </Radio.Group>\n            <Select defaultValue={isValid} style={{ width: '15%', float: 'right' }} onChange={handleValidSelectChange}>\n                <Option value={true}>확정</Option>\n                <Option value={false}>미확정</Option>\n            </Select>\n            <RevenueDownloadButton revenueList={revenueListData} style={{ width: '15%', float: 'right' }}/>\n            </div>\n            <RevenueTable revenueList={revenueListData}/>\n        </div>\n    )\n}\n\nexport default RevenueListView;\n","import React, { useState, useEffect } from 'react';\nimport RevenueTable from \"../molecules/RevenueTable\";\nimport AdminRepository from \"../repositories/AdminRepository\";\nimport RevenueDownloadButton from '../molecules/RevenueDownloadButton';\n\nimport { Input, Radio, Select  } from 'antd';\n\n// TODO: 매출 리스트 조회 API 로직 보완, 20개 이상의 리스트가 보여지도록\n// TODO: 매출 전체 리스트를 받아올 수 있도록 개선되면, api에 맞춰 수정할 것\n// TODO: product, review, order id에 따른 검색 기능 추가할 것\n// TODO: product, review, order 개별 요소를 모달로 간단히 확인할 수 있도록 기능 추가(옵션)\n// TODO: isSeller를 props로 받아서 해당 파라미터에 따라 리뷰리워드조회, 매출조회 선택가능하도록 수정할 것\n// TODO: Style 정리, 문자열 constant 정리\n\nfunction ReviewerRevenueListView () {\n    const [revenueListData, setRevenueListData] = useState([]);\n    const [searchType, setSearchType] = useState('userId');\n    const [isValid, setValid] = useState(true);\n    const { Search } = Input;\n    const { Option } = Select;\n\n    const handleRadioChange = (e) => {\n        setSearchType(e.target.value);\n    }\n    const handleValidSelectChange = async (value) => {\n        setValid(value);\n        let params = {};\n        // TODO : 추가적으로 item을 부르도록 수정해야 함.\n        // 임시 코드\n        params['limit'] = 3000;\n        params['isValid'] = value;\n        params['isSeller'] = false;\n        const resultRevenue = await AdminRepository.getRevenueList(params);\n        const resultOrder = await AdminRepository.getOrderList(params);\n        const data = resultRevenue.data;\n        data.map(revenueItem => {\n            const result = revenueItem;\n            const orders = resultOrder.data.filter(orderItem=>orderItem._id===revenueItem.order?._id);\n            result.order = orders[0];\n            return result;\n        })\n        setRevenueListData(data);\n    }\n    const handleSearch = async (value) => {\n        let params = {};\n        if(value!=='')\n        {\n            if(searchType==='userId') params['userId'] = value;\n            // 현재 아래 구현 X\n            //else if(searchType==='productId') params['productId'] = value;\n            //else if(searchType==='reviewId') params['videoId'] = value;\n            //else if(searchType==='orderId') params['orderId'] = value;\n        }\n\n        // TODO : 추가적으로 item을 부르도록 수정해야 함.\n        // 임시 코드\n        params['limit'] = 3000;\n        params['isValid'] = isValid;\n        params['isSeller'] = false;\n        const resultRevenue = await AdminRepository.getRevenueList(params);\n        const resultOrder = await AdminRepository.getOrderList(params);\n        const data = resultRevenue.data;\n        data.map(revenueItem => {\n            const result = revenueItem;\n            const orders = resultOrder.data.filter(orderItem=>orderItem._id===revenueItem.order?._id);\n            result.order = orders[0];\n            return result;\n        })\n        setRevenueListData(data);\n    }\n\n    async function updateRevenueList(params) {\n        const resultRevenue = await AdminRepository.getRevenueList(params);\n        const resultOrder = await AdminRepository.getOrderList(params);\n        const data = resultRevenue.data;\n        data.map(revenueItem => {\n            const result = revenueItem;\n            const orders = resultOrder.data.filter(orderItem=>orderItem._id===revenueItem.order?._id);\n            result.order = orders[0];\n            return resultRevenue;\n        })\n        //shipmentCompletedAt로 필터링 필요\n        setRevenueListData(data);\n    }\n\n    useEffect(()=>{\n        const params = {'limit': 3000, 'isValid': isValid, 'isSeller': false};\n        updateRevenueList(params);\n    },[]);\n\n    return (\n        <div>\n            <div>\n            <Search placeholder=\"input search text\" allowClear onSearch={handleSearch} style={{ width: '40%', float: 'left' }} />\n            <Radio.Group onChange={handleRadioChange} value={searchType} style={{float: 'left', margin: '0px 10px'}}>\n                <Radio value={'userId'}>contributorId</Radio>\n                <Radio disabled={true} value={'productId'}>productId</Radio>\n                <Radio disabled={true} value={'reviewId'}>reviewId</Radio>\n                <Radio disabled={true} value={'orderId'}>orderId</Radio>\n            </Radio.Group>\n            <Select defaultValue={isValid} style={{ width: '15%', float: 'right' }} onChange={handleValidSelectChange}>\n                <Option value={true}>확정</Option>\n                <Option value={false}>미확정</Option>\n            </Select>\n            <RevenueDownloadButton revenueList={revenueListData} style={{ width: '15%', float: 'right' }}/>\n            </div>\n            <RevenueTable revenueList={revenueListData}/>\n        </div>\n    )\n}\n\nexport default ReviewerRevenueListView;\n","import React from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport {\n    UserOutlined,\n    SolutionOutlined,\n    InboxOutlined,\n    ShoppingCartOutlined,\n    DollarOutlined,\n    CreditCardOutlined,\n} from \"@ant-design/icons\";\nimport 'antd/dist/antd.css';\nimport Strings from \"../strings/kor\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport UserListView from \"../organisms/UserListView\";\nimport ReviewListView from \"../organisms/ReviewListView\";\nimport ProductListView from \"../organisms/ProductListView\";\nimport OrderListView from \"../organisms/OrderListView\";\nimport RevenueListView from \"../organisms/RevenueListView\";\nimport ReviewerRevenueListView from \"../organisms/ReviewerRevenueListView\";\n\nfunction TestPage() {\n    const { SubMenu } = Menu;\n    const { Header, Content, Sider } = Layout;\n\n    return (\n        <Router>\n        <Layout>\n            <Header className=\"header\">\n                <div className=\"logo\" style={{fontSize:\"30px\", fontWeight: \"bold\", color: \"white\"}}>\n                    <div style={{float:'right'}}>greyd</div>\n                    <div style={{float:'left'}}>Admin Page</div>\n                </div>\n            </Header>\n            <Layout>\n                <Sider width={200} className=\"site-layout-background\">\n                    <Menu\n                        mode=\"inline\"\n                        style={{ height: \"100%\", borderRight: 0 }}\n                    >\n                        <SubMenu key=\"user\" icon={<UserOutlined />} title={Strings.MENU_USER_MANAGEMENT}>\n                            <Menu.Item key=\"1\">\n                                <Link to=\"/user\">\n                                    {Strings.SUB_USER_MANAGEMENT}\n                                </Link>\n                            </Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"review\" icon={<SolutionOutlined />} title={Strings.MENU_REVIEW_MANAGEMENT}>\n                            <Menu.Item key=\"2\">\n                                <Link to=\"/review\">\n                                    {Strings.SUB_REVIEW_MANAGEMENT}\n                                </Link>\n                            </Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"product\" icon={<InboxOutlined />} title={Strings.MENU_PRODUCT_MANAGEMENT}>\n                            <Menu.Item key=\"3\">\n                                <Link to=\"/product\">\n                                    {Strings.SUB_PRODUCT_MANAGEMENT}\n                                </Link>\n                            </Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"order\" icon={<ShoppingCartOutlined />} title={Strings.MENU_ORDER_MANAGEMENT}>\n                            <Menu.Item key=\"4\">\n                                <Link to=\"/order\">\n                                    {Strings.SUB_ORDER_MANAGEMENT}\n                                </Link>\n                            </Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"sales\" icon={<DollarOutlined />} title={Strings.MENU_SALES_MANAGEMENT}>\n                            <Menu.Item key=\"5\">\n                                <Link to=\"/sales\">\n                                    {Strings.SUB_SALES_MANAGEMENT}\n                                </Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"6\">\n                                <Link to=\"/review-rewards\">\n                                    {Strings.SUB_REVIEW_REWARDS_MANAGEMENT}\n                                </Link>\n                            </Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"billing\" icon={<CreditCardOutlined />} title={Strings.MENU_BILLING_MANAGEMENT}>\n                            <Menu.Item key=\"7\">\n                                <Link to=\"/billing\">\n                                    {Strings.SUB_BILLING_MANAGEMENT}\n                                </Link>\n                            </Menu.Item>\n                        </SubMenu>\n                    </Menu>\n                </Sider>\n                <Layout style={{ padding: \"0 24px 24px\" }}>\n                    <Content\n                        className=\"site-layout-background\"\n                        style={{\n                            padding: 24,\n                            margin: 0,\n                            minHeight: 280\n                        }}\n                    >\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <div>Dash Board</div>\n                            </Route>\n                            <Route path=\"/user\">\n                                <div>user</div>\n                                <UserListView />\n                            </Route>\n                            <Route path=\"/review\">\n                                <div>review</div>\n                                <ReviewListView />\n                            </Route>\n                            <Route path=\"/product\">\n                                <div>product</div>\n                                <ProductListView />\n                            </Route>\n                            <Route path=\"/order\">\n                                <div>order</div>\n                                <OrderListView />\n                            </Route>\n                            <Route path=\"/sales\">\n                                <div>sales</div>\n                                <RevenueListView isSeller={true}/>\n                            </Route>\n                            <Route path=\"/review-rewards\">\n                                <div>review-rewards</div>\n                                <ReviewerRevenueListView isSeller={false}/>\n                            </Route>\n                            <Route path=\"/billing\">\n                                <div>billing</div>\n                            </Route>\n                        </Switch>\n                    </Content>\n                </Layout>\n            </Layout>\n        </Layout>\n        </Router>\n    )\n}\n\nexport default TestPage;","import './App.css';\nimport './pages/MainPage';\nimport TestPage from './pages/TestPage';\n\nfunction App() {\n  return (\n    <TestPage />\n    // <MainPage />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}